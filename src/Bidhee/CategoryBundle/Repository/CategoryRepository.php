<?php

namespace Bidhee\CategoryBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Bidhee\CategoryBundle\Entity\Category;

/**
 * CategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CategoryRepository extends EntityRepository
{

    /**
     * @param Category $category
     */
    public function create(Category $category)
    {
        try {

            $this->_em->persist($category);
            $this->_em->flush();
        } catch (\Exception $e) {
        }
    }

    public function getCategoriesListQuery($filters = [])
    {
        $qb = $this->_em->createQueryBuilder();

        $qb->select('c')
            ->from(Category::class, 'c')
            ->where('1=1');

        if (array_key_exists('name', $filters) and $filters['name'] != '') {
            $qb->andWhere('c.name LIKE :name')->setParameter('name', '%' . $filters['name'] . '%');
        }

        if (array_key_exists('parentOnly', $filters) and $filters['parentOnly'] == true) {
            $qb->andWhere('c.parent IS NULL');
        }

        return $qb->getQuery();
    }

    public function getCategoriesList($filters = [])
    {
        return $this->getCategoriesListQuery($filters)->getResult();
    }

    /**
     * Get list of categories to show in web app
     * @return array
     */
    public function getPrimaryCategory()
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('c.id, c.name, c.alias')
            ->from(Category::class, 'c')
            ->where('1=1')
            ->orderBy('c.id', 'ASC');

        return $qb->getQuery()->getResult();
    }

    /**
     * Get List of top categories to show in top menu bar
     * @return array
     */
    public function getTopMenuItems()
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('c.id', 'c.name', 'c.alias')
            ->from(Category::class, 'c')
            ->where($qb->expr()->andX(
                $qb->expr()->eq('c.isTopMenuItem', ':isTopMenuItem'),
                $qb->expr()->eq('c.publish', ':publish'),
                $qb->expr()->eq('c.trash', ':trash')
            ))
            ->setParameters([
                'isTopMenuItem' => true,
                'publish' => true,
                'trash' => false
            ])
            ->orderBy('c.ordering', 'ASC');

        return $qb->getQuery()->getResult();
    }

    /**
     * @return array
     */
    public function getCategorySelectList()
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('c')->from(Category::class, 'c')->where('c.parent is null');
        $result = $qb->getQuery()->getResult();

        $response = [];
        foreach ($result as $r) {
            $response[] = $r;
            if (count($r->getChildren())) {
                foreach ($r->getChildren() as $c) {
                    $c->setLabel(' --- ' . $c->getName());
                    $response[] = $c;
                }
            }
        }

        return $response;
    }
}
